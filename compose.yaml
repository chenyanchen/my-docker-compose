# Comments are provided throughout this file to help you get started.
# If you need more help, visit the Docker Compose reference guide at
# https://docs.docker.com/go/compose-spec-reference/

# Here the instructions define your application as a service called "app".
# This service is built from the Dockerfile in the current directory.
# You can add other services your application may depend on here, such as a
# database or a cache. For examples, see the Awesome Compose repository:
# https://github.com/docker/awesome-compose
name: dev

services:
  # elasticsearch: https://github.com/deviantony/docker-elk

  redis:
    image: redis/redis-stack
    container_name: redis-stack
    volumes:
      - redis:/data
    networks:
      backend:
        aliases:
          - redis
    ports:
      - "6379:6379"
      - "8001:8001"

  mysql:
    image: mysql
    container_name: mysql
    volumes:
      - mysql:/var/lib/mysql
    networks:
      backend:
        aliases:
          - mysql
    ports:
      - "3306:3306"
      - "33060:33060"
    secrets:
      - password
    environment:
      MYSQL_ROOT_PASSWORD_FILE: /run/secrets/password

  postgres:
    image: postgres
    container_name: postgres
    volumes:
      - postgres:/var/lib/postgresql/data
    networks:
      backend:
        aliases:
          - postgres
    ports:
      - "5432:5432"
    secrets:
      - password
    environment:
      POSTGRES_PASSWORD_FILE: /run/secrets/password

  grafana:
    image: grafana/grafana
    container_name: grafana
    networks:
      backend:
        aliases:
          - grafana
    ports:
      - "3000:3000"
    volumes:
      - grafana:/var/lib/grafana

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    networks:
      backend:
        aliases:
          - prometheus
    ports:
      - "9090:9090"
    volumes:
      - prometheus:/etc/prometheus
    restart: unless-stopped

  node_exporter:
    image: quay.io/prometheus/node-exporter
    container_name: node_exporter
    command:
      - "--path.rootfs=/host"
    network_mode: host
    pid: host
    restart: unless-stopped
    volumes:
      - "/:/host:ro,rslave"

secrets:
  password:
    file: ./password.txt

networks:
  backend:
    name: backend

volumes:
  mysql:
  postgres:
  redis:
  grafana:
  prometheus:
  influxdb:
